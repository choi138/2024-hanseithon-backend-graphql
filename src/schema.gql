# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""학생"""
type StudentModel {
  """학과"""
  department: StudentDepartment!

  """학년"""
  grade: Float!

  """반"""
  classroom: Float!

  """번호"""
  number: Float!
}

enum StudentDepartment {
  CLOUD
  META
  HACKING
  NETWORK
  GAME
}

"""팀 멤버"""
type TeamMemberModel {
  """팀 멤버 생성일"""
  createdAt: DateTime!

  """팀 리더 여부"""
  isLeader: Boolean!

  """팀 아이디"""
  teamId: String!

  """팀 멤버 포지션"""
  position: TeamMemberPosition!

  """팀 멤버 정보"""
  user: UserModel!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum TeamMemberPosition {
  PM
  DESIGNER
  DEVELOPER
}

"""사용자"""
type UserModel {
  """사용자 아이디"""
  id: String!

  """사용자 이메일"""
  email: String!

  """사용자 이름"""
  name: String!

  """사용자 역할"""
  role: UserRole!

  """사용자 프로필 이미지 URL"""
  profileUrl: String

  """사용자 생성일"""
  createdAt: DateTime!

  """사용자 업데이트일"""
  updatedAt: DateTime!

  """사용자 마지막 로그인 시각"""
  lastLoginAt: DateTime

  """사용자 마지막 로그인 IP"""
  lastLoginIp: String

  """학생 정보"""
  student: StudentModel!

  """팀 멤버 정보"""
  teamMember: TeamMemberModel
}

enum UserRole {
  GUEST
  STUDENT
  ADMIN
}

"""로그인 성공 시 반환되는 Payload"""
type AuthOutputDto {
  """JWT 인증 토큰"""
  accessToken: String!
}

"""학생 정보 DTO"""
type TeamMemberStudentDto {
  """학과"""
  department: String!

  """학년"""
  grade: Float!
}

"""팀 멤버 DTO"""
type TeamMemberDto {
  """팀장 여부"""
  isLeader: Boolean!

  """포지션"""
  position: TeamMemberPosition!

  """이름"""
  name: String!

  """학생 정보"""
  student: TeamMemberStudentDto!

  """팀 멤버 생성일"""
  createdAt: DateTime!
}

"""팀 정보"""
type TeamOutputDto {
  """팀 id"""
  id: String!

  """팀 생성일"""
  createdAt: DateTime!

  """팀 업데이트 시간"""
  updatedAt: DateTime!

  """팀 타입"""
  type: TeamType!

  """팀 이름"""
  name: String!

  """팀 설명"""
  description: String!

  """초대 코드"""
  inviteCode: String!

  """팀 멤버"""
  members: [TeamMemberDto!]!
}

enum TeamType {
  LIVING
  GAME
}

"""팀 멤버 정보"""
type TeamMemberOutputDto {
  """포지션"""
  position: TeamMemberPosition!

  """이름"""
  name: String!

  """팀 멤버 생성일"""
  createdAt: DateTime!

  """학과"""
  department: String!

  """학년"""
  grade: Float!

  """팀 이름"""
  teamName: String!
}

"""팀 로그 정보"""
type TeamLogsOutputDto {
  """로그 ID"""
  id: String!

  """로그 타입"""
  type: TeamLogType!

  """팀 ID"""
  teamId: String!

  """멤버 이름"""
  memberName: String!

  """로그 시간"""
  actionAt: DateTime!
}

enum TeamLogType {
  TEAM_CREATED
  TEAM_JOIN
  TEAM_LEFT
}

type Query {
  sayHello: String!
  me: UserModel!
  getTeams: [TeamOutputDto!]!
  getMyTeamInfo: TeamOutputDto!
  getAllTeamMembers: [TeamMemberOutputDto!]!
  getMyTeamLogs: [TeamLogsOutputDto!]!
}

type Mutation {
  signUp(signUpDto: SignUpDto!): UserModel!
  signIn(signInDto: SignInDto!): AuthOutputDto!
  silent: AuthOutputDto!
  createTeam(createTeamAndJoinDto: CreateTeamAndJoinDto!): TeamOutputDto!
  joinTeam(joinTeamDto: JoinTeamDto!): TeamOutputDto!
  leaveTeam: Boolean!
  deleteTeam: Boolean!
  updateMemberPosition(updateTeamMemberPosition: UpdateTeamPositionDto!): Boolean!
}

"""회원가입 정보"""
input SignUpDto {
  """사용자 아이디"""
  email: String!

  """사용자 비밀번호"""
  password: String!

  """사용자 이름"""
  name: String!

  """학생 정보"""
  student: SignUpStudentDTO!
}

"""학생 정보"""
input SignUpStudentDTO {
  """학과"""
  department: String!

  """학년"""
  grade: Float!

  """반"""
  classroom: Float!

  """번호"""
  number: Float!
}

"""로그인 정보"""
input SignInDto {
  """사용자 아이디"""
  email: String!

  """사용자 비밀번호"""
  password: String!
}

"""팀 생성 및 가입 DTO"""
input CreateTeamAndJoinDto {
  """팀명"""
  name: String!

  """팀 설명"""
  description: String!

  """팀 유형"""
  type: TeamType!

  """팀 멤버 포지션"""
  position: TeamMemberPosition!
}

"""팀 가입 DTO"""
input JoinTeamDto {
  """팀 멤버 포지션"""
  position: TeamMemberPosition!

  """초대 코드"""
  inviteCode: String!
}

"""팀 포지션 변경 DTO"""
input UpdateTeamPositionDto {
  """팀 멤버 포지션"""
  position: TeamMemberPosition!
}